@page "/UploadRecipe"
@using Chef_Models.Dtos;
@using Chef_Web.Services.Contracts;
@*@attribute [Authorize]*@


@if (AvailableIngridients != null)
{
    <div class="container-fluid">
        <div class="row text-center">
            <div class="col">
                <img src="/assets/addRecipeImage.jpg" alt="Add Recipe" width="250" class="border-secondary"/>
            </div>
        </div>
    </div>
    <div class="container-fluid border-secondary my-1 w-50 align-content-center">
        <div class="row text-center ">
            <div class="col" >
                <div class="form-group my-1" >
                    <label for="formFile" class="form-label mt-4">Default file input example</label>
                    <input class="form-control" type="file" id="formFile">
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid border-secondary my-1 w-50 align-content-center">
        <div class="row text-center ">
            <div class="col my-1">
                <h3>List of ingredients</h3>
                <ul class="list-group">
                    @if (AddedIngredients != null)
                    {
                        @foreach (var ingredient in AddedIngredients)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="col justify-content-center">
                                    @ingredient.Name
                                </div>
                                <div class="col justify-content-end">
                                    @if (ingredient.Countable)
                                    {
                                        <span class="badge bg-primary rounded-pill">@ingredient.Quantity pcs.</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary rounded-pill">@ingredient.Quantity g.</span>
                                    }
                                    <span class="badge bg-danger rounded-pill" @onclick="() => DeleteIngredient(ingredient)">X</span>
                                </div>
                            </li>
                        }
                    }

                </ul>
            </div>
        </div>
    </div>
    <div class="container-fluid border-secondary my-1 w-50 align-content-center align-items-center justify-content-center text-center">
        <div class="row text-center align-content-center">
            <div class="col my-1">
                <div class="form-group" >
                    <label for="exampleSelect1" class="form-label mt-3">Add ingredients to your recipe</label>
                    <select class="form-select" id="exampleSelect1" @bind="IngredientToAddId"> 
                        @foreach (var ingredient in AvailableIngridients)
                        {
                            <option value="@ingredient.Id">@ingredient.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col my-1">
                <div class="form-group">
                    <label class="col-form-label " for="QtyInput">Default input</label>
                    <input type="text" class="form-control" placeholder="Default input" id="QtyInput" @bind="IngredientToAddQty">
                </div>
            </div>
            <div class="col my-1 mt-5">
                <button type="button" class="btn btn-secondary btn-outline-dark" @onclick="() => AddIngredient()">Add Ingredient</button>
            </div>
        </div>
    </div>
}
else
{
    <h1>Loading</h1>
}
@code {
    [Inject]
    public IIngredientService _ingredientService { get; set; }

    public List<IngredientDto> AddedIngredients { get; set; }
    public IEnumerable<IngredientDto> AvailableIngridients { get; set; }
    public int IngredientToAddId { get; set; }
    public string IngredientToAddQty { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AvailableIngridients = await _ingredientService.GetIngredients();
    }

    public void DeleteIngredient(IngredientDto addedIngredient)
    {
        AddedIngredients.Remove(addedIngredient);
    }

    public void AddIngredient()
    {
        if(AddedIngredients == null)
        {
            AddedIngredients = new List<IngredientDto>();
        }

        var obj = AvailableIngridients.Where(i => i.Id == IngredientToAddId).First();

        if (IngredientToAddQty != null)
        {
            bool QtyInputConvSucces = int.TryParse(IngredientToAddQty, out int ingredientToAddQtyInt);
            if(QtyInputConvSucces)
            {
                obj.Quantity = ingredientToAddQtyInt;
            }
            else
            {
                obj.Quantity = 0; 
            } 
        }

        if(!AddedIngredients.Contains(obj))
        {
            AddedIngredients.Add(obj);
        }
        
    }

    public void SelectIngredient(string ingredientValue)
    {
        
    }
}
