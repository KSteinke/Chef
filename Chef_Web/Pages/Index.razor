@page "/"
@layout NoNavMenu;
@using Chef_Web.Services.Contracts;
@using Chef_Models.Dtos;

<div class="container-fluid border-secondary">
    <div class="row">
        <div class="col-1">
            <label for="exampleSelect1" class="form-label mt-4 text-dark">Category</label>
        </div>
        <div class="col-1 my-3">
            <div class="form-group">
                <select class="form-select" id="exampleSelect1" @bind="Category">
                    <option>All</option>
                    <option>Breakfasts</option>
                    <option>Dinners</option>
                    <option>Suppers</option>
                    <option>Snacks</option>
                </select>
            </div>
        </div>
        <div class="col-1">

        </div>
        <div class="col-1">
            <label for="exampleSelect1" class="form-label mt-4">Diet Category</label>
        </div>
        <div class="col-1 my-3 border-right-">
            <div class="form-group">
                <select class="form-select" id="exampleSelect1" @bind="DietCategory">
                    <option>All</option>
                    <option>Meat</option>
                    <option>Vegetarian</option>
                    <option>Vegan</option>
                </select>
            </div>
        </div>
        <div class="col-1">
        </div>
        <div class="col-2 my-4">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @bind="LunchBox">
                <label class="form-check-label" for="flexCheckDefault">
                    Lunchbox suitable
                </label>
            </div>
        </div>
        <div class="col my-3">
            <button type="button" class="btn btn-dark ">Refresh</button>
        </div>
    </div>
</div>


<div class="container-fluid my-5">
    @if (Recipes == null)
    {
        <h3 class="mb-5">Wait!</h3>

    }
    else
    {
        <h3 class="mb-5">Enjoy Your Cooking!</h3>

        var productCount = Recipes.Count();
        <div class="row mt-3">

            @if (productCount > 0)
            {
                @foreach (var recipe in Recipes)
                {
                    <div class="col-md-3 mb-3">
                        <div class="card mb-3">
                            <a href="/Recipe/@recipe.Id">
                                <h3 class="card-header">@recipe.Name</h3>
                                <img src="@($"data:image/jpg;base64,{recipe.RecipeImgBase64}")" alt="Image" style="width: 100%;">
                            </a>
                            <div class="card-body">
                                <h5 class="card-title">Chef: @recipe.AuthorName</h5>
                            </div>
                            <div class="card-body">
                                <p class="card-text">@recipe.Description</p>
                            </div>
                            <div class="card-footer text-muted">
                                2 days ago
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    }
</div>


@code{
    [Inject]
    public IRecipeService recipeService { get; set; }

    public IEnumerable<RecipeDto> Recipes { get; set; }

    public string ErrorMessage { get; set; }
    public string Category { get; set; } 
    public string DietCategory { get; set; }
    public bool LunchBox { get; set; }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Recipes = await recipeService.GetRecipes();
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }

    }


}