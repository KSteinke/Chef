@page "/"
@layout NoNavMenu;
@using Chef_Web.Services.Contracts;
@using Chef_Models.Dtos;



@if (Recipes == null)
{
    <h3 class="mb-5">Wait!</h3>
}
else
{
    <h3 class="mb-5">Recipes</h3>
    var productCount = Recipes.Count();
    <div class="row mt-3">
    
    @if (productCount > 0)
    {
        @foreach (var recipe in Recipes)
        {
                <div class="col-md-3 mb-3">
                <div class="card mb-3">
                    <h3 class="card-header">@recipe.Name</h3>
                    
                    @*<svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle">
                        <rect width="100%" height="100%" fill="#868e96"></rect>
                        <text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text>
                    </svg>*@
                      @*  <img src="@($"data:image/jpg;base64,{recipe.RecipeImgBase64}")" alt="Image" width="100%" height="200" style="max-height: 100%" />*@
                    
                            <img src="@($"data:image/jpg;base64,{recipe.RecipeImgBase64}")" alt="Image" style="width: 100%;">
                    
                    <div class="card-body">
                        <h5 class="card-title">Chef: @recipe.AuthorName</h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@recipe.Description</p>
                    </div>
                    <div class="card-footer text-muted">
                        2 days ago
                    </div>
                </div>
                </div>







            @*<div>
                <img src="@($"data:image/jpg;base64,{recipe.RecipeImgBase64}")" alt="Image" width="220" height="220" style="max-height: 100%"/>
            </div>
            <hr class="mb-3" />*@
        }
        
    }
    
    </div>
}

@code{
    [Inject]
    public IRecipeService recipeService { get; set; }

    public IEnumerable<RecipeDto> Recipes { get; set; }

    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Recipes = await recipeService.GetRecipes();
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }

    }


}