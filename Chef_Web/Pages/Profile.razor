@page "/Profile"
@using Chef_Models.Dtos;
@using Chef_Web.Services.Contracts;
@layout NoNavMenu;


<div class="container-fluid my-5">
    @if (Recipes == null)
    {
        <h3 class="mb-5">Wait!</h3>

    }
    else
    {
        <h3 class="mb-5">Enjoy Your Cooking!</h3>

        var productCount = Recipes.Count();
        <div class="row mt-3">

            @if (productCount > 0)
            {
                @foreach (var recipe in Recipes)
                {
                    <div class="col-md-3 mb-3">
                        <div class="card mb-3">
                            <a href="/Recipe/@recipe.Id">
                                <h3 class="card-header">@recipe.Name</h3>
                                <img src="@($"data:image/jpg;base64,{recipe.RecipeImgBase64}")" alt="Image" style="width: 100%;">
                            </a>
                            <div class="card-body">
                                <h5 class="card-title">Chef: @recipe.AuthorName</h5>
                            </div>
                            <div class="card-body">
                                <p class="card-text">@recipe.Description</p>
                            </div>
                            <div class="card-footer text-muted">
                                2 days ago
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    }
</div>






@code {
    [Inject]
    public IRecipeService recipeService { get; set; }

    public IEnumerable<RecipeDto> Recipes { get; set; }

    public string ErrorMessage { get; set; }
    public string Category { get; set; }
    public string DietCategory { get; set; }
    public bool LunchBox { get; set; }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Recipes = await recipeService.GetRecipes();
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }

    }
}
